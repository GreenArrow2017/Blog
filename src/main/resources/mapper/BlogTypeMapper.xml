<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.Blog.Dao.BlogTypeDao">
    <resultMap id="BlogType" type="com.Blog.Entity.BlogType">
        <id column="id" property="id"></id>
        <result column="typename" property="typename"></result>
        <result column="orderno" property="orderno"></result>
    </resultMap>

    <select id="countList" resultMap="BlogType">
          select t2.id,t2.typename,count(t1.id) as blogcount from blog t1 right join blogtype t2 on t1.typeid = t2.id group by t2.typename order by t2.orderno
    </select>

    <select id="findById" resultMap="BlogType" parameterType="java.lang.Integer">
        select * from blogtype where id = #{id}
    </select>

    <select id="list" resultMap="BlogType" parameterType="java.util.Map">
        select * from blogtype
        <if test="start != null and size != null">
          limit #{start},#{size}
        </if>
    </select>

    <select id="getTotal" resultType="java.lang.Integer">
        select count(*) from blogtype
    </select>

    <insert id="add" parameterType="com.Blog.Entity.BlogType" useGeneratedKeys="true" keyProperty="id">
        insert into blogtype values(null,#{typename},#{orderno})
    </insert>

    <update id="update" parameterType="com.Blog.Entity.BlogType">
        update blogtype
        <set>
            <if test="typename != null and typename != ''">
                typename = #{typename},
            </if>
            <if test="orderno != null">
                orderno = #{orderno},
            </if>
        </set>

        where id = #{id}
    </update>

</mapper>